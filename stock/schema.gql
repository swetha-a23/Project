type SupplierSchema {
  supplier_id: Int!
  supplier_name: String!
  supplier_address: String!
  contact_number: String!
}

type StockSchema {
  stock_id: Int!
  product_id: Int!
  quantity: Int!
  location: String!
}

type ConsumerSchema {
  consumer_id: Int!
  consumer_name: String!
  consumer_address: String!
  contact_number: String!
}

type ProductSchema {
  product_id: Int!
  product_name: String!
  amount: Float!
  description: String!
}

type SupplierOrderSchema {
  order_id: Int!
  supplier_id: Int!
  stock_id: Int!
  order_date: String!
  quantity: Int!
  total_amount: Int!
  product: ProductSchema
  calculate_total_price: Int!
}

type ConsumerOrderSchema {
  order_id: Int!
  consumer_id: Int!
  product_id: Int!
  order_date: String!
  quantity: Int!
  total_amount: Int!
  product: ProductSchema
  calculate_total_price: Int!
}

type SupplierTransactionSchema {
  transaction_id: Int!
  supplier_id: Int!
  order_id: Int!
  amount: Float!
  transaction_date: String!
  order: SupplierOrderSchema
}

type ConsumerTransactionSchema {
  transaction_id: Int!
  consumer_id: Int!
  order_id: Int!
  stock_id: Int!
  transaction_date: String!
  amount: Float!
  order: ConsumerOrderSchema
}

type Query {
  getAllSuppliers: [SupplierSchema!]!
  getSupplierById(supplier_id: Int!): SupplierSchema
  getAllStocks: [StockSchema!]!
  getStockById(stock_id: Int!): StockSchema
  getAllConsumers: [ConsumerSchema!]!
  getConsumerById(consumer_id: Int!): ConsumerSchema
  getAllProducts: [ProductSchema!]!
  getProductById(product_id: Int!): ProductSchema
  getAllSupplierOrders: [SupplierOrderSchema!]!
  getSupplierOrderById(order_id: Int!): SupplierOrderSchema
  getAllConsumerOrders: [ConsumerOrderSchema!]!
  getConsumerOrderById(order_id: Int!): ConsumerOrderSchema
  getAllSupplierTransactions: [SupplierTransactionSchema!]!
  getSupplierTransactionById(transaction_id: Int!): SupplierTransactionSchema
  getAllConsumerTransactions: [ConsumerTransactionSchema!]!
  getConsumerTransactionById(transaction_id: Int!): ConsumerTransactionSchema
}

type Mutation {
  create_supplier(supplier_name: String!, supplier_address: String!, contact_number: String!): SupplierSchema
  update_supplier(supplier_id: Int!, supplier_name: String!, supplier_address: String!, contact_number: String!): SupplierSchema
  delete_supplier(supplier_id: Int!): SupplierSchema
  create_stock(product_id: Int!, quantity: Int!, location: String!): StockSchema
  update_stock(stock_id: Int!, product_id: Int!, quantity: Int!, location: String!): StockSchema
  delete_stock(stock_id: Int!): StockSchema
  create_consumer(consumer_name: String!, consumer_address: String!, contact_number: String!): ConsumerSchema
  update_consumer(consumer_id: Int!, consumer_name: String!, consumer_address: String!, contact_number: String!): ConsumerSchema
  delete_consumer(consumer_id: Int!): ConsumerSchema
  create_product(product_name: String!, amount: Float!, description: String!): ProductSchema
  update_product(product_id: Int!, product_name: String!, amount: Float!, description: String!): ProductSchema
  delete_product(product_id: Int!): ProductSchema
  create_supplier_order(supplier_id: Int!, stock_id: Int!, order_date: String!, quantity: Int!): SupplierOrderSchema
  update_supplier_order(order_id: Int!, supplier_id: Int!, stock_id: Int!, order_date: String!, quantity: Int!): SupplierOrderSchema
  delete_supplier_order(order_id: Int!): SupplierOrderSchema
  create_consumer_order(consumer_id: Int!, product_id: Int!, order_date: String!, quantity: Int!): ConsumerOrderSchema
  update_consumer_order(order_id: Int!, consumer_id: Int!, product_id: Int!, order_date: String!, quantity: Int!): ConsumerOrderSchema
  delete_consumer_order(order_id: Int!): ConsumerOrderSchema
  create_supplier_transaction(supplier_id: Int!, order_id: Int!, transaction_date: String!): SupplierTransactionSchema
  update_supplier_transaction(transaction_id: Int!, supplier_id: Int!, order_id: Int!, transaction_date: String!): SupplierTransactionSchema
  delete_supplier_transaction(transaction_id: Int!): SupplierTransactionSchema
  create_consumer_transaction(consumer_id: Int!, order_id: Int!, stock_id: Int!, transaction_date: String!): ConsumerTransactionSchema
  update_consumer_transaction(transaction_id: Int!, consumer_id: Int!, order_id: Int!, stock_id: Int!, transaction_date: String!): ConsumerTransactionSchema
  delete_consumer_transaction(transaction_id: Int!): ConsumerTransactionSchema
}
